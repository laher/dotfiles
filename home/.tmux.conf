#set-option -g default-shell /usr/bin/zsh
set-option -g mode-keys vi
set-option -g status-keys vi
set-option -g mouse on
set -g base-index 1
set -g pane-base-index 1

set-option -g prefix C-a
set-option -g prefix2 C-b
unbind C-a
bind-key C-a send-prefix


set-option -sa terminal-overrides ',xterm-256color:RGB'

# renumber windows on close
set-option -g renumber-windows on 

# xterm-256color breaks Home/End keys in tmux
set -g default-terminal "screen-256color"
set -sg escape-time 0

bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

bind-key -T copy-mode-vi 'v' send -X begin-selection # Begin selection in copy mode.
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle # Begin selection in copy mode.
bind-key -T copy-mode-vi 'y' send -X copy-selection # Yank selection in copy mode.
unbind-key -T copy-mode-vi v

# trigger copy mode by
bind -n M-Up copy-mode

# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi M-Up              send-keys -X scroll-up
bind -T copy-mode-vi M-Down            send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
#bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
#bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
#bind-key -T copy-mode-vi C-\ select-pane -l

# run-shell "powerline-daemon -q"
# source "/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

bind c new-window -c "#{pane_current_path}"


# Reload config
bind R   source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Window tab menu
bind-key  -T root  MouseDown3Status      display-menu -T "#[align=centre]#{window_index}:#{window_name}" -t = -x W -y S \
  "Swap Left"                         l "swap-window -t:-1"                                  \
  "Swap Right"                        r "swap-window -t:+1"                                  \
  "#{?pane_marked_set,,-}Swap Marked" s swap-window                                          \
  ""                                                                                         \
  Kill                                X kill-window                                          \
  Respawn                             R "respawn-window -k"                                  \
  "#{?pane_marked,Unmark,Mark}"       m "select-pane -m"                                     \
  Rename                              n "command-prompt -I \"#W\" \"rename-window -- '%%'\"" \
  ""                                                                                         \
  "New After"                         w "new-window -a"                                      \
  "New At End"                        W new-window

# Window status left menu
bind-key  -T root  MouseDown3StatusLeft  display-menu -T "#[align=centre]#{session_name}" -t = -x M -y S \
  Next          n "switch-client -n"                                    \
  Previous      p "switch-client -p"                                    \
  ""                                                                    \
  Renumber      N "move-window -r"                                      \
  Rename        n "command-prompt -I \"#S\" \"rename-session -- '%%'\"" \
  ""                                                                    \
  "New Session" s new-session                                           \
  "New Window"  w "new-window -c \"#{pane_current_path}\""              \

# Window status right menu
bind-key  -T root  MouseDown3StatusRight display-menu -T "#[align=centre]#{client_name}" -t = -x M -y S \
  Detach            d   detach-client                                                        \
  "Detach & Kill"   X   "detach-client -P"                                                   \
  "Detach Others"   o   "detach-client -a"                                                   \
  ""                                                                                         \
  "Save session"    C-s "run-shell ~/.tmux/plugins/tmux-resurrect/scripts/save.sh"           \
  "Restore session" C-r "run-shell ~/.tmux/plugins/tmux-resurrect/scripts/restore.sh"        \
  "Switch to"       g   "run-shell ~/.tmux/plugins/tmux-sessionist/scripts/goto_session.sh"  \
  ""                                                                                         \
  "Reload config"   R   "source-file ~/.tmux.conf \; display-message \"Config reloaded...\"" \
  "Install plugin"  I   "run-shell ~/.tmux/plugins/tpm/bindings/install_plugins"             \
  ""                                                                                         \
  Lock              l   lock-client                                                          \

# Pane menu
bind-key  -T root  MouseDown3Pane      display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -t = -x M -y M \
  "Search regexp"                                                 /   "run-shell ~/.tmux/plugins/tmux-copycat/scripts/copycat_search.sh" \
  "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r "copy-mode -t=; send -Xt= search-backward \"#{q:mouse_word}\""     \
  "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}"       C-y "send-keys -l -- \"#{q:mouse_word}\""                              \
  "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}"       c   "set-buffer -- \"#{q:mouse_word}\""                                \
  "#{?mouse_line,Copy Line,}"                                     l   "set-buffer -- \"#{q:mouse_line}\""                                \
  ""                                                                                                                                     \
  "Toggle logging"                                                P   "run-shell ~/.tmux/plugins/tmux-logging/scripts/toggle_logging.sh" \
  "Screen capture"                                                M-p "run-shell ~/.tmux/plugins/tmux-logging/scripts/screen_capture.sh" \
  "Save history"                                                  M-P "run-shell ~/.tmux/plugins/tmux-logging/scripts/save_complete_history.sh" \
  "Clear pane history"                                            M-c "run-shell ~/.tmux/plugins/tmux-logging/scripts/clear_history.sh"  \
  ""                                                                                                                                     \
  "Horizontal Split"                                              h   "split-window -h -c \"#{pane_current_path}\""                      \
  "Vertical Split"                                                v   "split-window -v -c \"#{pane_current_path}\""                      \
  ""                                                                                                                                     \
  "Swap Up"                                                       u   "swap-pane -U"                                                     \
  "Swap Down"                                                     d   "swap-pane -D"                                                     \
  "#{?pane_marked_set,,-}Swap Marked"                             s   swap-pane                                                          \
  ""                                                                                                                                     \
  Kill                                                            X   kill-pane                                                          \
  Respawn                                                         R   "respawn-pane -k"                                                  \
  "#{?pane_marked,Unmark,Mark}"                                   m   "select-pane -m"                                                   \
  ""                                                                                                                                     \
  "#{?window_zoomed_flag,Unzoom,Zoom}"                            z   "resize-pane -Z"                                                   \



set -g status-interval 3
set -g status-fg colour236
set -g status-bg colour39
# set -g status-left '#[fg=yellow,bg=colour236,nobold] #(whoami)#[fg=colour236,bg=colour39,nobold]'
# set -g window-status-format "#[fg=colour8,bg=colour39]|#[fg=colour8,bg=colour39]#I #W " # 
# set -g window-status-current-format "#[fg=colour234,bg=colour39,bold]#[nobold] #[nobold]#W #[nobold]|#[bold]#[fg=colour40,bg=colour234,bold]"
# set -g status-right '#[fg=colour236,bg=colour39,nobold]#[fg=colour39,bg=colour236,nobold]#[fg=yellow,bold]#(cat /proc/loadavg | sed "s/ .*//")#[fg=colour39,bold]‖#[fg=yellow,nobold]%m/%d#[fg=colour39,bold]‖#[fg=yellow]%H:%M'

set -g automatic-rename-format "#{s/bash//:pane_current_command}"
set -g window-status-format "#I #{=-15:?window_name,#{window_name},#{s/am/home/:?pane_current_path,#{b:pane_current_path},}}#F "
set -g window-status-current-format "#[fg=red](#[fg=default]#I #{=-15:?window_name,#{window_name},#{s/am/home/:?pane_current_path,#{b:pane_current_path},}}#F#[fg=red])#[fg=default] "
set -g status-right '#[fg=colour236,bg=colour39,nobold]#[fg=colour39,bg=colour236,nobold]#[fg=yellow,bold]#(cat /proc/loadavg | sed "s/ .*//")#[fg=colour39,bold]‖#[fg=yellow,nobold]%m/%d#[fg=colour39,bold]‖#[fg=yellow]%H:%M'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @resurrect-strategy-nvim 'session'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
