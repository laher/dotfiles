#!/usr/bin/zsh

function install_kubectl_all {
  $(install_kubectl 1.10.6)
  $(install_kubectl 1.5.2)
  $(install_kubectl 1.7.4)
}

function kubectl-env {
  case $1 in
  *dd) # fallthrough
    ;&
  tools)
    echo kubectl-1.10.6
    ;;
  *us)
    echo kubectl-1.5.2
    ;;
  *fr) # fallthrough
    ;&
  *cn)
    echo kubectl-1.7.4
    ;;
  *)
    echo kubectl
    ;;
  esac
}

function kubectl-ctx {
  echo "$(kubectl-env $1) --context=$1"
}

function k {
  case $2 in
  -gp)
    $(kubectl-ctx $1) get pod ${@:3}
    ;;
  -gpn)
    $(kubectl-ctx $1) get pod -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}' ${@:3}
    ;;
  -gpi)
    $(kubectl-ctx $1) get pod -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}' ${@:4}|grep $3|vipe
    ;;
  -gpa)
    $(kubectl-ctx $1) get pod -l "app=${2}" --no-headers ${@:3}
    ;;
  -x)
    $(kubectl-ctx $1) exec -it $3 -- ${@:4}
    ;;
  -sh)
    $(kubectl-ctx $1) exec -it $3 -- sh ${@:4}
    ;;
  -a)
    $(kubectl-ctx $1) apply -f ${@:3}
    ;;
  -r)
    $(kubectl-ctx $1) replace --cascade --force -f ${@:3}
    ;;
  -l)
    $(kubectl-ctx $1) log ${@:3}
    ;;
  -f)
    $(kubectl-ctx $1) log --tail=10 -f ${@:3}
    ;;
  -p)
    $(kubectl-ctx $1) patch deployment $3 -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"redeployTimestamp\": \"$(date -u -R)\"}}}}}"
    ;;
  -pw)
    $(kubectl-ctx $1) patch deployment $3 -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"redeployTimestamp\": \"$(date -u -R)\"}}}}}"
    $(kubectl-ctx $1) get pod --watch
    ;;
  -pf)
    $(kubectl-ctx $1) port-forward ${@:3}
    ;;
  -v)
    $(kubectl-ctx $1) get pod -o jsonpath='{range .items[*].spec.containers[*]}{.name}{"\t"}{.image}{"\n"}{end}'|sort -u
    ;;
  -vs)
    $(kubectl-ctx $1) get pod -o jsonpath='{range .items[*].spec.containers[*]}{.name}{"\t"}{.image}{"\n"}{end}'|grep $3|sort -u
    ;;
  *)
    $(kubectl-ctx $1) ${@:2}
    ;;
  esac
}

alias kyd='k ydd'
alias kyus='k yus'
alias kyfr='k yfr'

function kpi {
  export POD=$($(kubectl-ctx $1 -gp) -o jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}' ${@:3}|$grep $2|vipe)
  export CTXPOD="$1 $POD" 
}

function ki {
  echo -n "$1 "
  $(kubectl-ctx $1) get pod --no-headers | grep $2 | head -1| cut -d ' ' -f1
}

function install_kubectl {
    local server_version=$1
    local platform=$([[ $OSTYPE == *darwin* ]] && echo "darwin" || echo "linux")
    [ -d ~/bin/ ] || mkdir -p ~/bin/
    echo "dowloading kubectl $server_version  ..."
    curl -# -Lo ~/bin/kubectl-$server_version "https://storage.googleapis.com/kubernetes-release/release/v$server_version/bin/$platform/amd64/kubectl"
    chmod +x ~/bin/kubectl-$server_version
}

